import matplotlib.pyplot as plt
import numpy as np
import torch
import torch.nn.functional as F
import os
from PIL import Image
import torchvision.transforms as transforms
os.environ["KMP_DUPLICATE_LIB_OK"] = "TRUE"

def laplacian_sharpness(image):
    laplacian_kernel = torch.tensor([[0.,  1.,  0.],
                                     [1., -4.,  1.],
                                     [0.,  1.,  0.]]).view(1, 1, 3, 3)
    
    image = image.unsqueeze(0).unsqueeze(0)  # (1, 1, H, W)
    laplacian = F.conv2d(image, laplacian_kernel)
    return laplacian.var().item()

def load_image_as_tensor(image_path):
    image = Image.open(image_path).convert('L')  # 转换为灰度图像
    transform = transforms.ToTensor()  # 转换为 torch.Tensor
    image_tensor = transform(image) * 255  # 将张量的值范围扩展到 [0, 255]
    return image_tensor

# 主函数：从文件夹读取图像并计算锐度
def process_images_in_folder(folder_path):
    image_files = [f for f in os.listdir(folder_path) if f.endswith(('.png', '.jpg', '.jpeg', '.bmp'))]
    sharpness_values = []
    for image_file in image_files:
        image_path = os.path.join(folder_path, image_file)
        image_tensor = load_image_as_tensor(image_path)  # 读取并转换图像
        sharpness_value = laplacian_sharpness(image_tensor.squeeze())  # 计算锐度
        sharpness_values.append(sharpness_value)
        # print(f"图像: {image_file}, 锐度（基于拉普拉斯方差）：{sharpness_value}")
    return sharpness_values


paths = ['./Models/VAE/latent_space_images','./Models/GAN/clipped_img','./Models/DDPM/split_img',]
data = []
for folder in paths:
    data.append(process_images_in_folder(folder))

fig, ax = plt.subplots(figsize=(6, 6))  # 调整尺寸以适应单个箱线图

# 绘制箱线图
ax.boxplot(data)

# 设置 X 轴的标签
ax.set_xticklabels(['VAE', 'GAN', 'DDPM'])

# 设置 Y 轴标签和标题
ax.set_ylabel('Sharpness (based on Laplace variance)', fontsize=12)
ax.set_xlabel('Boxplots of the sharpness of images generated by different models', fontsize=12)

# 绘制每个数据点
for i, group in enumerate(data, start=1):
    # 创建一些随机抖动，避免点完全重叠
    x_values = np.random.normal(i, 0.04, size=len(group))
    ax.scatter(x_values, group, alpha=0.7, color='#1f77b4',s=3)  # 绘制数据点

plt.tight_layout()
# plt.show()
plt.savefig('./Models/GAN/Sharpness_Boxplot.jpg')